test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
laborforcefillout_ref <- data %>%
dplyr::slice(13) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
as.data.frame()
names(laborforcefillout_ref) <- c('region', 'year', 'laborforce')
str(laborforcefillout_ref)
pppconvert_ref <- data %>%
dplyr::slice(47) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
as.data.frame()
names(pppconvert_ref) <- c('region', 'constRatio', 'PPPConvert')
str(pppconvert_ref)
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
str(pppconvert_ref)
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region', 'year'))
test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
# dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
test <- productivity_ref %>%
# dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'year', 'laborproductivity', 'constRatio', 'PPPConvert')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
View(test)
test <- productivity_ref %>%
# dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborproductivity', )]
test <- productivity_ref %>%
# dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborproductivity')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
dplyr::full_join(laborforcefillout_ref, by = c('region', 'year')) %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborforce', 'laborproductivity')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region', 'year'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborforce', 'laborproductivity')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborforce', 'laborproductivity')]
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region'))
laborforcefillout_ref <- data %>%
dplyr::slice(13) %>%
dplyr::select(-V2) %>%
dplyr::mutate(V3 = as.numeric(V3)) %>%
as.data.frame()
names(laborforcefillout_ref) <- c('region', 'laborforce')
str(laborforcefillout_ref)
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'laborforce', 'year', 'laborproductivity')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'laborforce', 'year', 'laborproductivity')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region')) %>%
dplyr::full_join(laborforcefillout_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert',  'year', 'laborforce','laborproductivity')]
# Auto-produce XML from CSV
gcamdata_variable <- c("RDMSocioeconomics") #  "AgProdChange"
imported_data <- tibble::as_tibble(test)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(imported_data, gcamdata_variable, NULL) %>%
gcamdata::run_xml_conversion()
View(TranSubsecInterp)
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
# dplyr::full_join(laborforcefillout_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborproductivity')]
laborforcefillout_ref <- data %>%
dplyr::slice(13) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
as.data.frame()
names(laborforcefillout_ref) <- c('region', 'year', 'laborforce')
str(laborforcefillout_ref)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
test <- productivity_ref %>%
dplyr::left_join(basegdp_ref, by = c('region')) %>%
dplyr::left_join(pppconvert_ref, by = c('region'))
# dplyr::full_join(laborforcefillout_ref, by = c('region'))
# test <- test[c('region', 'baseGDP', 'year', 'laborforce', 'laborproductivity', 'constRatio', 'PPPConvert')]
test <- test[c('region', 'baseGDP', 'constRatio', 'PPPConvert', 'year', 'laborproductivity')]
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
# mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/uncertainty/uncertain_factor_files/Socioeconomic/GDP/header_gdp.txt'
# mi_header <- paste(dirname(base_directory), 'headers_rdm.txt', sep = '/')
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(tibble::as_tibble(test), 'RDMSocioeconomics', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(laborforcefillout_ref), 'LaborForceFillout', NULL) %>%
gcamdata::run_xml_conversion()
basegdp_ref
'..'
getwd('..')
basegdp_ref <- data %>%
dplyr::slice(6) %>%
dplyr::select(-V3) %>%
dplyr::mutate(V2 = as.numeric(V2)) %>%
dplyr::rename(region = V1,
baseGDP = V2) %>%
as.data.frame()
str(basegdp_ref)
laborforcefillout_ref <- data %>%
dplyr::slice(13) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
as.data.frame()
names(laborforcefillout_ref) <- c('region', 'year', 'laborforce')
str(laborforcefillout_ref)
productivity_ref <- data %>%
dplyr::slice(20:40) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
as.data.frame()
names(productivity_ref) <- c('region', 'year', 'laborproductivity')
str(productivity_ref)
pppconvert_ref <- data %>%
dplyr::slice(47) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
as.data.frame()
names(pppconvert_ref) <- c('region', 'constRatio', 'PPPConvert')
str(pppconvert_ref)
# Auto-produce XML from CSV
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(tibble::as_tibble(basegdp_ref), 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(laborforcefillout_ref), 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(productivity_ref), 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(pppconvert_ref), 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
years <- seq(2020, 2100, 5)
approx(0, years, xout=0.5)
approx(c(2020, 0), c(2050, 0.5))
approx(c(2020, 0), c(2050, 0.5), xout=seq(2025,2045,5))
approx(c(2020, 0), c(2050, 0.5), yout=seq(2025,2045,5))
approx(c(2020, 0), c(2050, 0.5), xout = c(2025,2030))
approx(c(2020, 2050), c(0, 0.5), xout = c(2025,2030))
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.5), xout = seq(2020, 2050, 5))
prod_decrease
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.5), xout = seq(2020, 2100, 5))
prod_decrease
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))$y
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(unlist(prod_decrease), nrow = length(prod_decrease), byrow = T)
prod_decrease
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease), byrow = T))
prod_decrease
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease), byrow = F))
prod_decrease
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- cbindlist(prod_decrease, idcol = F)
prod_decrease <- rbindlist(prod_decrease, idcol = F)
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- rbindlist(prod_decrease, idcol = F)
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease), byrow = T))
View(prod_decrease)
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease), byrow = FALSE))
View(prod_decrease)
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
length(prod_decrease)
nrow(prod_decrease)
ncol(prod_decrease)
count(prod_decrease)
length(prod_decrease$x)
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease$x), byrow = TRUE))
View(prod_decrease)
prod_decrease <- approx(x = c(2020, 2050), y = c(0, 0.005), xout = seq(2020, 2050, 5))
prod_decrease <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease$x), byrow = FALSE))
View(prod_decrease)
View(prod_decrease)
change_2050 <- 0.005
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = seq(2020, 2050, 5))
prod_change <- data.frame(matrix(unlist(prod_decrease), nrow = length(prod_decrease$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = seq(2020, 2050, 5))
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
View(prod_change)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = seq(2020, 2100, 5), method = 'linear')
View(prod_change)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
View(prod_change)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = seq(2020, 2100, 5), method = 'linear', rule = 2)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = seq(2005, 2100, 5), method = 'linear', yleft=1, yright=2)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = seq(2005, 2100, 5), method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
change_2050 <- 0.005
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = paste(1990, seq(2005, 2100, 5)),
method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = rbind(1990, seq(2005, 2100, 5)),
method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = append(1990, seq(2005, 2100, 5)),
method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
productivity_ref
productivity_high <- productivity_ref %>%
dplyr::left_join(prod_change, by = c('year')) %>%
dplyr::mutate(laborproductivity = laborproductivity + change) %>%
dplyr::select(-change)
View(productivity_high)
# Auto-produce XML from CSV
xmlpath <- paste(base_directory, 'Colombia_GDP_High', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(tibble::as_tibble(basegdp_ref), 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(laborforcefillout_ref), 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(productivity_high), 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(pppconvert_ref), 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
# Auto-produce XML from CSV
xmlpath <- paste(base_directory, 'Colombia_GDP_High.xml', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(tibble::as_tibble(basegdp_ref), 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(laborforcefillout_ref), 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(productivity_high), 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(pppconvert_ref), 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
# productivity low scenario ===================================================
# add 0.5% to the reference GDP by 2050
change_2050 <- -0.005
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = append(1990, seq(2005, 2100, 5)),
method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
productivity_low <- productivity_ref %>%
dplyr::left_join(prod_change, by = c('year')) %>%
dplyr::mutate(laborproductivity = laborproductivity + change) %>%
dplyr::select(-change)
# Auto-produce XML from CSV
xmlpath <- paste(base_directory, 'Colombia_GDP_Low.xml', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(tibble::as_tibble(basegdp_ref), 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(laborforcefillout_ref), 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(productivity_low), 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(tibble::as_tibble(pppconvert_ref), 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
productivity_low %>%
dplyr::left_join(productivity_ref, by = c('region', 'year')) %>%
dplyr::left_join(productivity_high, by = c('region', 'year'))
# Write out GDP growth rate table for both Low, Medium, and High scenario
gdp_growth <- productivity_low %>%
dplyr::left_join(productivity_ref, by = c('region', 'year')) %>%
dplyr::left_join(productivity_high, by = c('region', 'year')) %>%
dplyr::rename(Low_GDP = laborproductivity.x,
Mid_GDP = laborproductivity.y,
High_GDP = laborproductivity)
View(gdp_growth)
data.table::fwrite(gdp_growth, file = 'GDP_growth.csv')
basegdp_ref <- data %>%
dplyr::slice(6) %>%
dplyr::select(-V3) %>%
dplyr::mutate(V2 = as.numeric(V2)) %>%
dplyr::rename(region = V1,
baseGDP = V2) %>%
tibble::as_tibble()
View(basegdp_ref)
str(basegdp_ref)
laborforcefillout_ref <- data %>%
dplyr::slice(13) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
tibble::as_tibble()
names(laborforcefillout_ref) <- c('region', 'year', 'laborforce')
str(laborforcefillout_ref)
productivity_ref <- data %>%
dplyr::slice(20:40) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
tibble::as_tibble()
names(productivity_ref) <- c('region', 'year', 'laborproductivity')
str(productivity_ref)
pppconvert_ref <- data %>%
dplyr::slice(47) %>%
dplyr::mutate(V2 = as.numeric(V2),
V3 = as.numeric(V3)) %>%
tibble::as_tibble()
names(pppconvert_ref) <- c('region', 'constRatio', 'PPPConvert')
str(pppconvert_ref)
xmlpath <- paste(base_directory, 'test.xml', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(basegdp_ref, 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(laborforcefillout_ref, 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(productivity_ref, 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(pppconvert_ref, 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
# productivity high scenario ===================================================
# add 0.5% to the reference GDP by 2050
change_2050 <- 0.005
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = append(1990, seq(2005, 2100, 5)),
method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
productivity_high <- productivity_ref %>%
dplyr::left_join(prod_change, by = c('year')) %>%
dplyr::mutate(laborproductivity = laborproductivity + change) %>%
dplyr::select(-change)
str(productivity_high)
# Auto-produce XML from CSV
xmlpath <- paste(base_directory, 'Colombia_GDP_High.xml', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(basegdp_ref, 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(laborforcefillout_ref, 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(productivity_high, 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(pppconvert_ref, 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
# productivity low scenario ===================================================
# add 0.5% to the reference GDP by 2050
change_2050 <- -0.005
prod_change <- approx(x = c(2020, 2050), y = c(0, change_2050), xout = append(1990, seq(2005, 2100, 5)),
method = 'linear', yleft=0, yright=change_2050)
prod_change <- data.frame(matrix(unlist(prod_change), nrow = length(prod_change$x), byrow = FALSE)) %>%
dplyr::rename(year = X1,
change = X2)
productivity_low <- productivity_ref %>%
dplyr::left_join(prod_change, by = c('year')) %>%
dplyr::mutate(laborproductivity = laborproductivity + change) %>%
dplyr::select(-change)
# Auto-produce XML from CSV
xmlpath <- paste(base_directory, 'Colombia_GDP_Low.xml', sep = '/')
mi_header <- 'E:/NEXO-UA/Github/IDB_RDM_Colombia/colombia_policy/headers_rdm.txt'
gcamdata::create_xml(xmlpath, mi_header = mi_header) %>%
gcamdata::add_xml_data(basegdp_ref, 'BaseGDP', NULL) %>%
gcamdata::add_xml_data(laborforcefillout_ref, 'LaborForceFillout', NULL) %>%
gcamdata::add_xml_data(productivity_low, 'LaborProductivity', NULL) %>%
gcamdata::add_xml_data(pppconvert_ref, 'PPPConvert', NULL) %>%
gcamdata::run_xml_conversion()
# Write out GDP growth rate table for both Low, Medium, and High scenario
gdp_growth <- productivity_low %>%
dplyr::left_join(productivity_ref, by = c('region', 'year')) %>%
dplyr::left_join(productivity_high, by = c('region', 'year')) %>%
dplyr::rename(Low_GDP = laborproductivity.x,
Mid_GDP = laborproductivity.y,
High_GDP = laborproductivity)
data.table::fwrite(gdp_growth, file = 'GDP_growth.csv')
