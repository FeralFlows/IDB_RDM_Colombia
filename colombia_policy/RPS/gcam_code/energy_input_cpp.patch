diff --git "a/cvs/objects/functions/source/energy_input.cpp" "b/cvs/objects/functions/source/energy_input.cpp"
index c7ef65c88..6a665da15 100644
--- "a/cvs/objects/functions/source/energy_input.cpp"
+++ "b/cvs/objects/functions/source/energy_input.cpp"
@@ -181,6 +181,9 @@ void EnergyInput::XMLParse( const xercesc::DOMNode* node ) {
         }
         else if( nodeName == "income-elasticity" ){
             mIncomeElasticity = XMLHelper<double>::getValue( curr );
+        }
+		else if( nodeName == "adjusted-coefficient" ){
+            XMLHelper<Value>::insertValueIntoVector( curr, mAdjustedCoefficients, scenario->getModeltime() );
         }
         else if( nodeName == "calibrated-value" ){
             mCalibrationInput = XMLHelper<double>::getValue( curr );
@@ -260,6 +263,7 @@ void EnergyInput::completeInit( const string& aRegionName,
 
     // If there is a coefficient, initialize it and determine the current
     // coefficient. Otherwise use a default intensity of 1.
+	/*
     Value currCoef( 1 );
     if( mCoefficient ){
         mCoefficient->completeInit();
@@ -269,6 +273,7 @@ void EnergyInput::completeInit( const string& aRegionName,
 
     // Set the coeffients to the read-in value.
     fill( mAdjustedCoefficients.begin(), mAdjustedCoefficients.end(), currCoef );
+	*/
     initializeTypeFlags();
 }
 
@@ -288,7 +293,7 @@ void EnergyInput::initCalc( const string& aRegionName,
 
     // Set the coefficient for the current period if there is an explicit
     // coefficient read-in, or it was not initialized from the previous period.
-    if( mCoefficient ){
+    if( mCoefficient && !mAdjustedCoefficients[ aPeriod ].isInited() ){
         mAdjustedCoefficients[ aPeriod ] = mCoefficient->getCoefficient();
     }
     else if( !mAdjustedCoefficients[ aPeriod ].isInited() ){
